// Generated by CoffeeScript 1.10.0
(function() {
  var CommandParser, DiffHandler, Server, diffModuleCount, receivedDiffs, server, serverEvents, waitingRequestInterface;

  Server = require('ws').Server;

  CommandParser = require('./utility/server.command-parser');

  DiffHandler = require('./utility/server.diff-handler');

  server = new Server({
    port: 8080
  });

  server.broadcastDiffModules = function(data) {
    var client, i, len, ref, results;
    ref = server.clients;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      client = ref[i];
      if (client.type === 'diffFind') {
        results.push(client.send(data));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  receivedDiffs = [];

  diffModuleCount = 0;

  waitingRequestInterface = void 0;

  serverEvents = function(client) {
    console.log('module connected');
    client.type = 'diffFind';
    diffModuleCount++;
    return client.on('message', function(message) {
      var event, filesPath, outputDiffs;
      console.log('received: %s', message);
      event = JSON.parse(message);
      switch (event.type) {
        case 'moduleType':
          client.type = event.parameters;
          console.log("new module type is " + client.type);
          return diffModuleCount--;
        case 'addLib':
          return createDirectory();
        case 'pushDiff':
          receivedDiffs.push(event.parameters);
          if (receivedDiffs.length === diffModuleCount) {
            console.log('All diffs received');
            outputDiffs = DiffHandler.handleDiffs(receivedDiffs);
            return waitingRequestInterface.send(JSON.stringify(outputDiffs));
          }
          break;
        case 'getDiff':
          console.log('response pending...');
          waitingRequestInterface = client;
          filesPath = {
            libDocumentationV1Path: '/class_main1.xml',
            libDocumentationV2Path: '/class_main2.xml',
            libSourceV1Path: 'some/path',
            libSourceV2Path: 'some/path'
          };
          return server.broadcastDiffModules(JSON.stringify(filesPath));
        default:
          return console.log('undefined command');
      }
    });
  };

  server.on('connection', serverEvents);

}).call(this);

//# sourceMappingURL=server.main.js.map
