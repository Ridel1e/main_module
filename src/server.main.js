// Generated by CoffeeScript 1.10.0
(function() {
  var DiffHandler, Server, ServerCommandsController, filesPath, interfaceModules, receivedDiffs, server, serverEvents;

  Server = require('ws').Server;

  ServerCommandsController = require('./utility/server.commands-controller');

  DiffHandler = require('./utility/server.diff-handler');

  filesPath = {
    libDocumentationV1Path: '/class_main1.xml',
    libDocumentationV2Path: '/class_main2.xml',
    libSourceV1Path: 'some/path',
    libSourceV2Path: 'some/path'
  };

  server = new Server({
    port: 8080
  });

  server.broadcast = function(data, currentClient) {
    var client, i, len, ref, results;
    ref = server.clients;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      client = ref[i];
      if (client !== currentClient) {
        results.push(client.send(data));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  receivedDiffs = [];

  interfaceModules = [];

  serverEvents = function(ws) {
    console.log('module connected');
    return ws.on('message', function(message) {
      var client, i, len, outputDiffs, results;
      console.log('received: %s', message);
      if (message === '/getDiffs') {
        interfaceModules.push(ws);
        server.broadcast(JSON.stringify(filesPath), ws);
      } else {
        receivedDiffs.push(JSON.parse(message));
      }
      if (receivedDiffs.length === server.clients.length - 1) {
        console.log('all diff has been received');
        outputDiffs = DiffHandler.handleDiffs(receivedDiffs);
        results = [];
        for (i = 0, len = interfaceModules.length; i < len; i++) {
          client = interfaceModules[i];
          results.push(client.send(JSON.stringify(outputDiffs)));
        }
        return results;
      }
    });
  };

  server.on('connection', serverEvents);

}).call(this);

//# sourceMappingURL=server.main.js.map
